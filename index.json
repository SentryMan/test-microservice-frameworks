[{"content":"In Linux pkrvmqc4gcfdwos 6.11.0-1018-azure #18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux,\nMemory Usage: 965/15995MB (6.03%) Disk Usage: 49/72GB (68%) CPU Load: 3.23 CPU core count:4 CPUs cpu MHz\t: 3240.309 cpu MHz\t: 3242.676 cpu MHz\t: 3241.463 cpu MHz\t: 3243.578 Below is total package generation times for separate modules,\n[INFO] eclipse-microprofile-kumuluz-test 4.1.0 ............ SUCCESS [ 4.901 s] [INFO] helidon-quickstart-se 4.2.2 ........................ SUCCESS [ 7.098 s] [INFO] ktor-demo 3.2.3-kotlin-2.2.0 ....................... SUCCESS [ 11.660 s] [INFO] micronaut-demo 4.9.2 ............................... SUCCESS [ 26.392 s] [INFO] quarkus-demo 3.25.0 ................................ SUCCESS [ 14.296 s] [INFO] springboot-webflux-demo 3.5.4 ...................... SUCCESS [ 2.199 s] [INFO] springboot-demo-web 3.5.4 .......................... SUCCESS [ 2.198 s] [INFO] vertx-demo 4.5.16 .................................. SUCCESS [ 5.128 s] Size of created packages:\nSize in MB Name 22M ./eclipse-microprofile-kumuluz-test/target/eclipse-microprofile-kumuluz-test-4.1.0.jar 8.8M ./helidon-se-netty/target/helidon-quickstart-se.jar 8.8M ./helidon-se-netty/target/original-helidon-quickstart-se.jar 19M ./ktor/target/ktor-demo-3.2.3-kotlin-2.2.0-jar-with-dependencies.jar 14M ./micronaut/target/micronaut-demo-4.9.2.jar 19M ./quarkus/target/quarkus-demo-runner.jar 21M ./spring-boot-web/target/springboot-demo-web-3.5.4.jar 24M ./spring-boot-webflux/target/springboot-webflux-demo-3.5.4.jar 8.4M ./vertx/target/vertx-demo-4.5.16-fat.jar :: Spring Boot :: (v3.5.4) Started DemoWebFluxApplication in 1.825 seconds (process running for 2.273)\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 48 (OK=48 KO=- ) \u0026gt; max response time 4424 (OK=4424 KO=- ) \u0026gt; mean response time 1298 (OK=1298 KO=- ) \u0026gt; std deviation 911 (OK=911 KO=- ) \u0026gt; response time 50th percentile 1008 (OK=1008 KO=- ) \u0026gt; response time 75th percentile 1476 (OK=1476 KO=- ) \u0026gt; response time 95th percentile 3472 (OK=3472 KO=- ) \u0026gt; response time 99th percentile 4044 (OK=4045 KO=- ) \u0026gt; mean requests/sec 2909.091 (OK=2909.091 KO=- ) :: Spring Boot :: (v3.5.4) Started DemoApplication in 1.922 seconds (process running for 2.347)\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 7 (OK=7 KO=- ) \u0026gt; max response time 5223 (OK=5223 KO=- ) \u0026gt; mean response time 1044 (OK=1044 KO=- ) \u0026gt; std deviation 701 (OK=701 KO=- ) \u0026gt; response time 50th percentile 852 (OK=852 KO=- ) \u0026gt; response time 75th percentile 1146 (OK=1145 KO=- ) \u0026gt; response time 95th percentile 2657 (OK=2658 KO=- ) \u0026gt; response time 99th percentile 3721 (OK=3720 KO=- ) \u0026gt; mean requests/sec 3555.556 (OK=3555.556 KO=- ) powered by Quarkus 3.25.0) started in 1.061s. Listening on: http://0.0.0.0:8080\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 13 (OK=13 KO=- ) \u0026gt; max response time 3576 (OK=3576 KO=- ) \u0026gt; mean response time 1121 (OK=1121 KO=- ) \u0026gt; std deviation 592 (OK=592 KO=- ) \u0026gt; response time 50th percentile 994 (OK=995 KO=- ) \u0026gt; response time 75th percentile 1244 (OK=1245 KO=- ) \u0026gt; response time 95th percentile 2258 (OK=2258 KO=- ) \u0026gt; response time 99th percentile 2441 (OK=2441 KO=- ) \u0026gt; mean requests/sec 3555.556 (OK=3555.556 KO=- ) micronaut version: 4.9.0 Startup completed in 570ms. Server Running: http://localhost:8080\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 59 (OK=59 KO=- ) \u0026gt; max response time 1803 (OK=1803 KO=- ) \u0026gt; mean response time 757 (OK=757 KO=- ) \u0026gt; std deviation 340 (OK=340 KO=- ) \u0026gt; response time 50th percentile 738 (OK=738 KO=- ) \u0026gt; response time 75th percentile 1018 (OK=1018 KO=- ) \u0026gt; response time 95th percentile 1338 (OK=1338 KO=- ) \u0026gt; response time 99th percentile 1472 (OK=1472 KO=- ) \u0026gt; mean requests/sec 4000 (OK=4000 KO=- ) vertx version:4.5.16\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 76 (OK=76 KO=- ) \u0026gt; max response time 1718 (OK=1718 KO=- ) \u0026gt; mean response time 867 (OK=867 KO=- ) \u0026gt; std deviation 330 (OK=330 KO=- ) \u0026gt; response time 50th percentile 924 (OK=924 KO=- ) \u0026gt; response time 75th percentile 1139 (OK=1139 KO=- ) \u0026gt; response time 95th percentile 1342 (OK=1342 KO=- ) \u0026gt; response time 99th percentile 1493 (OK=1493 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) kumuluz version:4.1.0 Server \u0026ndash; Started Server@66c83fc8{STARTING}[10.0.9,sto=0] @2942ms\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 1 (OK=1 KO=- ) \u0026gt; max response time 6059 (OK=6059 KO=- ) \u0026gt; mean response time 1356 (OK=1356 KO=- ) \u0026gt; std deviation 1054 (OK=1054 KO=- ) \u0026gt; response time 50th percentile 1028 (OK=1028 KO=- ) \u0026gt; response time 75th percentile 1402 (OK=1402 KO=- ) \u0026gt; response time 95th percentile 3782 (OK=3783 KO=- ) \u0026gt; response time 99th percentile 4835 (OK=4835 KO=- ) \u0026gt; mean requests/sec 2909.091 (OK=2909.091 KO=- ) Helidon SE 4.2.2 features: [Config, Encoding, Health, Media, Metrics, Observe, Registry, WebServer]\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 2230 (OK=2230 KO=- ) \u0026gt; mean response time 667 (OK=667 KO=- ) \u0026gt; std deviation 685 (OK=685 KO=- ) \u0026gt; response time 50th percentile 373 (OK=373 KO=- ) \u0026gt; response time 75th percentile 891 (OK=892 KO=- ) \u0026gt; response time 95th percentile 2105 (OK=2105 KO=- ) \u0026gt; response time 99th percentile 2170 (OK=2170 KO=- ) \u0026gt; mean requests/sec 4000 (OK=4000 KO=- ) ktor:3.2.3\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 16283 (OK=16283 KO=- ) \u0026gt; mean response time 828 (OK=828 KO=- ) \u0026gt; std deviation 1015 (OK=1015 KO=- ) \u0026gt; response time 50th percentile 521 (OK=522 KO=- ) \u0026gt; response time 75th percentile 1159 (OK=1159 KO=- ) \u0026gt; response time 95th percentile 2927 (OK=2927 KO=- ) \u0026gt; response time 99th percentile 4400 (OK=4400 KO=- ) \u0026gt; mean requests/sec 1454.545 (OK=1454.545 KO=- ) Rust rest services rustc 1.89.0 (29483883e 2025-08-04)\nwarp = 0.3.7\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 609 (OK=609 KO=- ) \u0026gt; mean response time 197 (OK=197 KO=- ) \u0026gt; std deviation 153 (OK=153 KO=- ) \u0026gt; response time 50th percentile 189 (OK=189 KO=- ) \u0026gt; response time 75th percentile 262 (OK=262 KO=- ) \u0026gt; response time 95th percentile 530 (OK=530 KO=- ) \u0026gt; response time 99th percentile 573 (OK=573 KO=- ) \u0026gt; mean requests/sec 6400 (OK=6400 KO=- ) actix-web = 4.9.0\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 660 (OK=660 KO=- ) \u0026gt; mean response time 207 (OK=207 KO=- ) \u0026gt; std deviation 151 (OK=151 KO=- ) \u0026gt; response time 50th percentile 193 (OK=193 KO=- ) \u0026gt; response time 75th percentile 271 (OK=272 KO=- ) \u0026gt; response time 95th percentile 527 (OK=527 KO=- ) \u0026gt; response time 99th percentile 598 (OK=598 KO=- ) \u0026gt; mean requests/sec 6400 (OK=6400 KO=- ) rocket = { version = 0.5.1, features = [json] }\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 701 (OK=701 KO=- ) \u0026gt; mean response time 257 (OK=257 KO=- ) \u0026gt; std deviation 158 (OK=158 KO=- ) \u0026gt; response time 50th percentile 231 (OK=231 KO=- ) \u0026gt; response time 75th percentile 313 (OK=313 KO=- ) \u0026gt; response time 95th percentile 602 (OK=602 KO=- ) \u0026gt; response time 99th percentile 660 (OK=661 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) axum = 0.8.1\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 602 (OK=602 KO=- ) \u0026gt; mean response time 186 (OK=186 KO=- ) \u0026gt; std deviation 144 (OK=144 KO=- ) \u0026gt; response time 50th percentile 178 (OK=178 KO=- ) \u0026gt; response time 75th percentile 250 (OK=250 KO=- ) \u0026gt; response time 95th percentile 492 (OK=492 KO=- ) \u0026gt; response time 99th percentile 565 (OK=565 KO=- ) \u0026gt; mean requests/sec 6400 (OK=6400 KO=- ) Dotnet 7 rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 1 (OK=1 KO=- ) \u0026gt; max response time 1493 (OK=1493 KO=- ) \u0026gt; mean response time 283 (OK=283 KO=- ) \u0026gt; std deviation 172 (OK=172 KO=- ) \u0026gt; response time 50th percentile 261 (OK=261 KO=- ) \u0026gt; response time 75th percentile 344 (OK=344 KO=- ) \u0026gt; response time 95th percentile 607 (OK=607 KO=- ) \u0026gt; response time 99th percentile 723 (OK=723 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) Dotnet 8 rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 5 (OK=5 KO=- ) \u0026gt; max response time 748 (OK=748 KO=- ) \u0026gt; mean response time 271 (OK=271 KO=- ) \u0026gt; std deviation 150 (OK=150 KO=- ) \u0026gt; response time 50th percentile 254 (OK=254 KO=- ) \u0026gt; response time 75th percentile 322 (OK=322 KO=- ) \u0026gt; response time 95th percentile 582 (OK=582 KO=- ) \u0026gt; response time 99th percentile 654 (OK=654 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) Dotnet 9 rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 1 (OK=1 KO=- ) \u0026gt; max response time 973 (OK=973 KO=- ) \u0026gt; mean response time 331 (OK=331 KO=- ) \u0026gt; std deviation 175 (OK=175 KO=- ) \u0026gt; response time 50th percentile 301 (OK=301 KO=- ) \u0026gt; response time 75th percentile 385 (OK=385 KO=- ) \u0026gt; response time 95th percentile 686 (OK=685 KO=- ) \u0026gt; response time 99th percentile 784 (OK=784 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) graalvm native quarkus ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 16 (OK=16 KO=- ) \u0026gt; max response time 1088 (OK=1088 KO=- ) \u0026gt; mean response time 402 (OK=402 KO=- ) \u0026gt; std deviation 183 (OK=183 KO=- ) \u0026gt; response time 50th percentile 380 (OK=380 KO=- ) \u0026gt; response time 75th percentile 501 (OK=501 KO=- ) \u0026gt; response time 95th percentile 753 (OK=753 KO=- ) \u0026gt; response time 99th percentile 914 (OK=914 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) graalvm native micronaut ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 2 (OK=2 KO=- ) \u0026gt; max response time 1177 (OK=1177 KO=- ) \u0026gt; mean response time 333 (OK=333 KO=- ) \u0026gt; std deviation 168 (OK=168 KO=- ) \u0026gt; response time 50th percentile 302 (OK=302 KO=- ) \u0026gt; response time 75th percentile 419 (OK=419 KO=- ) \u0026gt; response time 95th percentile 664 (OK=664 KO=- ) \u0026gt; response time 99th percentile 805 (OK=805 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) graalvm native spring-boot-web ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 5 (OK=5 KO=- ) \u0026gt; max response time 2633 (OK=2633 KO=- ) \u0026gt; mean response time 450 (OK=450 KO=- ) \u0026gt; std deviation 299 (OK=299 KO=- ) \u0026gt; response time 50th percentile 402 (OK=403 KO=- ) \u0026gt; response time 75th percentile 525 (OK=525 KO=- ) \u0026gt; response time 95th percentile 897 (OK=897 KO=- ) \u0026gt; response time 99th percentile 1732 (OK=1732 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) graalvm native spring-boot-webflux ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 2 (OK=2 KO=- ) \u0026gt; max response time 1447 (OK=1447 KO=- ) \u0026gt; mean response time 411 (OK=411 KO=- ) \u0026gt; std deviation 256 (OK=256 KO=- ) \u0026gt; response time 50th percentile 342 (OK=342 KO=- ) \u0026gt; response time 75th percentile 498 (OK=498 KO=- ) \u0026gt; response time 95th percentile 977 (OK=977 KO=- ) \u0026gt; response time 99th percentile 1208 (OK=1208 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) graalvm native vertx ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 38 (OK=38 KO=- ) \u0026gt; max response time 815 (OK=815 KO=- ) \u0026gt; mean response time 454 (OK=454 KO=- ) \u0026gt; std deviation 162 (OK=162 KO=- ) \u0026gt; response time 50th percentile 468 (OK=468 KO=- ) \u0026gt; response time 75th percentile 586 (OK=586 KO=- ) \u0026gt; response time 95th percentile 686 (OK=686 KO=- ) \u0026gt; response time 99th percentile 768 (OK=768 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) graalvm native helidon ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=0 KO=32000 ) \u0026gt; min response time 3 (OK=- KO=3 ) \u0026gt; max response time 1138 (OK=- KO=1138 ) \u0026gt; mean response time 321 (OK=- KO=321 ) \u0026gt; std deviation 167 (OK=- KO=167 ) \u0026gt; response time 50th percentile 290 (OK=- KO=290 ) \u0026gt; response time 75th percentile 379 (OK=- KO=379 ) \u0026gt; response time 95th percentile 651 (OK=- KO=651 ) \u0026gt; response time 99th percentile 821 (OK=- KO=821 ) \u0026gt; mean requests/sec 5333.333 (OK=- KO=5333.333) graalvm native ktor rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 6124 (OK=6124 KO=- ) \u0026gt; mean response time 460 (OK=460 KO=- ) \u0026gt; std deviation 753 (OK=753 KO=- ) \u0026gt; response time 50th percentile 160 (OK=161 KO=- ) \u0026gt; response time 75th percentile 453 (OK=453 KO=- ) \u0026gt; response time 95th percentile 2164 (OK=2164 KO=- ) \u0026gt; response time 99th percentile 3426 (OK=3426 KO=- ) \u0026gt; mean requests/sec 4000 (OK=4000 KO=- ) GraalVM Native Binaries Sizes: Size in MB Name 62 quarkus-demo-runner 80 micronaut-demo 85 springboot-demo-web 89 springboot-webflux-demo 62 vertx-demo 56 helidon-quickstart-se 63 ktor-demo source code for the java and dotnet tests :point_left: source code for the rust tests :point_left: github action :point_left:\n","permalink":"https://ozkanpakdil.github.io/test-microservice-frameworks/posts/2025/2025-08-24-microservice-framework-test-24/","summary":"\u003cp\u003eIn Linux pkrvmqc4gcfdwos 6.11.0-1018-azure #18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMemory Usage: 965/15995MB \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e6.03%\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDisk Usage: 49/72GB \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e68%\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCPU Load: 3.23\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCPU core count:4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCPUs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3240.309\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3242.676\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3241.463\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3243.578\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBelow is total package generation times for separate modules,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e eclipse-microprofile-kumuluz-test 4.1.0 ............ SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  4.901 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e helidon-quickstart-se 4.2.2 ........................ SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  7.098 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e ktor-demo 3.2.3-kotlin-2.2.0 ....................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e 11.660 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e micronaut-demo 4.9.2 ............................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e 26.392 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e quarkus-demo 3.25.0 ................................ SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e 14.296 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e springboot-webflux-demo 3.5.4 ...................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  2.199 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e springboot-demo-web 3.5.4 .......................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  2.198 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e vertx-demo 4.5.16 .................................. SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  5.128 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSize of created packages:\u003c/p\u003e","title":"Java microservice framework tests in SB:3.5.4 Q:3.25.0 M:4.9.2 V:4.5.16 H:4.2.2 Dotnet:7,8,9 openjdk version \"24.0.2\" 2025-07-15 rustc 1.89.0 (29483883e 2025-08-04)"},{"content":"In Linux pkrvmqc4gcfdwos 6.11.0-1018-azure #18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux,\nMemory Usage: 876/15995MB (5.48%) Disk Usage: 49/72GB (68%) CPU Load: 2.14 CPU core count:4 CPUs cpu MHz\t: 3241.199 cpu MHz\t: 3241.547 cpu MHz\t: 3245.587 cpu MHz\t: 3243.334 Below is total package generation times for separate modules,\n[INFO] eclipse-microprofile-kumuluz-test 4.1.0 ............ SUCCESS [ 5.411 s] [INFO] helidon-quickstart-se 4.2.2 ........................ SUCCESS [ 6.979 s] [INFO] ktor-demo 3.2.3-kotlin-2.2.0 ....................... SUCCESS [ 11.932 s] [INFO] micronaut-demo 4.9.2 ............................... SUCCESS [ 26.649 s] [INFO] quarkus-demo 3.25.0 ................................ SUCCESS [ 14.504 s] [INFO] springboot-webflux-demo 3.5.4 ...................... SUCCESS [ 2.604 s] [INFO] springboot-demo-web 3.5.4 .......................... SUCCESS [ 2.602 s] [INFO] vertx-demo 4.5.16 .................................. SUCCESS [ 5.323 s] Size of created packages:\nSize in MB Name 22M ./eclipse-microprofile-kumuluz-test/target/eclipse-microprofile-kumuluz-test-4.1.0.jar 8.8M ./helidon-se-netty/target/helidon-quickstart-se.jar 8.8M ./helidon-se-netty/target/original-helidon-quickstart-se.jar 19M ./ktor/target/ktor-demo-3.2.3-kotlin-2.2.0-jar-with-dependencies.jar 14M ./micronaut/target/micronaut-demo-4.9.2.jar 19M ./quarkus/target/quarkus-demo-runner.jar 21M ./spring-boot-web/target/springboot-demo-web-3.5.4.jar 24M ./spring-boot-webflux/target/springboot-webflux-demo-3.5.4.jar 8.4M ./vertx/target/vertx-demo-4.5.16-fat.jar :: Spring Boot :: (v3.5.4) Started DemoWebFluxApplication in 1.89 seconds (process running for 2.347)\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 50 (OK=50 KO=- ) \u0026gt; max response time 4300 (OK=4300 KO=- ) \u0026gt; mean response time 1329 (OK=1329 KO=- ) \u0026gt; std deviation 890 (OK=890 KO=- ) \u0026gt; response time 50th percentile 965 (OK=963 KO=- ) \u0026gt; response time 75th percentile 1605 (OK=1605 KO=- ) \u0026gt; response time 95th percentile 3464 (OK=3464 KO=- ) \u0026gt; response time 99th percentile 4014 (OK=4014 KO=- ) \u0026gt; mean requests/sec 2909.091 (OK=2909.091 KO=- ) :: Spring Boot :: (v3.5.4) Started DemoApplication in 1.945 seconds (process running for 2.379)\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 11 (OK=11 KO=- ) \u0026gt; max response time 5163 (OK=5163 KO=- ) \u0026gt; mean response time 1095 (OK=1095 KO=- ) \u0026gt; std deviation 750 (OK=750 KO=- ) \u0026gt; response time 50th percentile 863 (OK=864 KO=- ) \u0026gt; response time 75th percentile 1262 (OK=1266 KO=- ) \u0026gt; response time 95th percentile 2787 (OK=2787 KO=- ) \u0026gt; response time 99th percentile 3484 (OK=3484 KO=- ) \u0026gt; mean requests/sec 3200 (OK=3200 KO=- ) powered by Quarkus 3.25.0) started in 1.067s. Listening on: http://0.0.0.0:8080\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 20 (OK=20 KO=- ) \u0026gt; max response time 3364 (OK=3364 KO=- ) \u0026gt; mean response time 1117 (OK=1117 KO=- ) \u0026gt; std deviation 579 (OK=579 KO=- ) \u0026gt; response time 50th percentile 964 (OK=964 KO=- ) \u0026gt; response time 75th percentile 1361 (OK=1361 KO=- ) \u0026gt; response time 95th percentile 2185 (OK=2185 KO=- ) \u0026gt; response time 99th percentile 2888 (OK=2888 KO=- ) \u0026gt; mean requests/sec 3555.556 (OK=3555.556 KO=- ) micronaut version: 4.9.0 Startup completed in 594ms. Server Running: http://localhost:8080\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 32 (OK=32 KO=- ) \u0026gt; max response time 1875 (OK=1875 KO=- ) \u0026gt; mean response time 751 (OK=751 KO=- ) \u0026gt; std deviation 358 (OK=358 KO=- ) \u0026gt; response time 50th percentile 644 (OK=644 KO=- ) \u0026gt; response time 75th percentile 1058 (OK=1058 KO=- ) \u0026gt; response time 95th percentile 1375 (OK=1375 KO=- ) \u0026gt; response time 99th percentile 1559 (OK=1559 KO=- ) \u0026gt; mean requests/sec 4000 (OK=4000 KO=- ) vertx version:4.5.16\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 69 (OK=69 KO=- ) \u0026gt; max response time 1757 (OK=1757 KO=- ) \u0026gt; mean response time 903 (OK=903 KO=- ) \u0026gt; std deviation 364 (OK=364 KO=- ) \u0026gt; response time 50th percentile 965 (OK=965 KO=- ) \u0026gt; response time 75th percentile 1206 (OK=1206 KO=- ) \u0026gt; response time 95th percentile 1408 (OK=1408 KO=- ) \u0026gt; response time 99th percentile 1527 (OK=1527 KO=- ) \u0026gt; mean requests/sec 4000 (OK=4000 KO=- ) kumuluz version:4.1.0 Server \u0026ndash; Started Server@3ac04654{STARTING}[10.0.9,sto=0] @2938ms\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 48 (OK=48 KO=- ) \u0026gt; max response time 6298 (OK=6298 KO=- ) \u0026gt; mean response time 1381 (OK=1381 KO=- ) \u0026gt; std deviation 1050 (OK=1050 KO=- ) \u0026gt; response time 50th percentile 1070 (OK=1070 KO=- ) \u0026gt; response time 75th percentile 1475 (OK=1475 KO=- ) \u0026gt; response time 95th percentile 3873 (OK=3874 KO=- ) \u0026gt; response time 99th percentile 4910 (OK=4910 KO=- ) \u0026gt; mean requests/sec 2909.091 (OK=2909.091 KO=- ) Helidon SE 4.2.2 features: [Config, Encoding, Health, Media, Metrics, Observe, Registry, WebServer]\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 2603 (OK=2603 KO=- ) \u0026gt; mean response time 787 (OK=787 KO=- ) \u0026gt; std deviation 438 (OK=438 KO=- ) \u0026gt; response time 50th percentile 706 (OK=706 KO=- ) \u0026gt; response time 75th percentile 1101 (OK=1101 KO=- ) \u0026gt; response time 95th percentile 1651 (OK=1651 KO=- ) \u0026gt; response time 99th percentile 1853 (OK=1853 KO=- ) \u0026gt; mean requests/sec 4000 (OK=4000 KO=- ) ktor:3.2.3\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 12240 (OK=12240 KO=- ) \u0026gt; mean response time 927 (OK=927 KO=- ) \u0026gt; std deviation 997 (OK=997 KO=- ) \u0026gt; response time 50th percentile 684 (OK=683 KO=- ) \u0026gt; response time 75th percentile 1327 (OK=1327 KO=- ) \u0026gt; response time 95th percentile 2534 (OK=2534 KO=- ) \u0026gt; response time 99th percentile 4530 (OK=4530 KO=- ) \u0026gt; mean requests/sec 1882.353 (OK=1882.353 KO=- ) Rust rest services rustc 1.89.0 (29483883e 2025-08-04)\nwarp = 0.3.7\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 640 (OK=640 KO=- ) \u0026gt; mean response time 187 (OK=187 KO=- ) \u0026gt; std deviation 149 (OK=149 KO=- ) \u0026gt; response time 50th percentile 175 (OK=175 KO=- ) \u0026gt; response time 75th percentile 250 (OK=250 KO=- ) \u0026gt; response time 95th percentile 499 (OK=499 KO=- ) \u0026gt; response time 99th percentile 577 (OK=577 KO=- ) \u0026gt; mean requests/sec 6400 (OK=6400 KO=- ) actix-web = 4.9.0\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 795 (OK=795 KO=- ) \u0026gt; mean response time 267 (OK=267 KO=- ) \u0026gt; std deviation 170 (OK=170 KO=- ) \u0026gt; response time 50th percentile 234 (OK=234 KO=- ) \u0026gt; response time 75th percentile 337 (OK=337 KO=- ) \u0026gt; response time 95th percentile 642 (OK=642 KO=- ) \u0026gt; response time 99th percentile 716 (OK=716 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) rocket = { version = 0.5.1, features = [json] }\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 695 (OK=695 KO=- ) \u0026gt; mean response time 219 (OK=219 KO=- ) \u0026gt; std deviation 150 (OK=150 KO=- ) \u0026gt; response time 50th percentile 202 (OK=202 KO=- ) \u0026gt; response time 75th percentile 283 (OK=282 KO=- ) \u0026gt; response time 95th percentile 534 (OK=534 KO=- ) \u0026gt; response time 99th percentile 612 (OK=612 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) axum = 0.8.1\n---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 709 (OK=709 KO=- ) \u0026gt; mean response time 201 (OK=201 KO=- ) \u0026gt; std deviation 156 (OK=156 KO=- ) \u0026gt; response time 50th percentile 187 (OK=187 KO=- ) \u0026gt; response time 75th percentile 267 (OK=267 KO=- ) \u0026gt; response time 95th percentile 526 (OK=526 KO=- ) \u0026gt; response time 99th percentile 610 (OK=610 KO=- ) \u0026gt; mean requests/sec 6400 (OK=6400 KO=- ) Dotnet 7 rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 4 (OK=4 KO=- ) \u0026gt; max response time 884 (OK=884 KO=- ) \u0026gt; mean response time 364 (OK=364 KO=- ) \u0026gt; std deviation 185 (OK=185 KO=- ) \u0026gt; response time 50th percentile 330 (OK=330 KO=- ) \u0026gt; response time 75th percentile 413 (OK=413 KO=- ) \u0026gt; response time 95th percentile 739 (OK=739 KO=- ) \u0026gt; response time 99th percentile 786 (OK=786 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) Dotnet 8 rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 690 (OK=690 KO=- ) \u0026gt; mean response time 242 (OK=242 KO=- ) \u0026gt; std deviation 143 (OK=143 KO=- ) \u0026gt; response time 50th percentile 219 (OK=219 KO=- ) \u0026gt; response time 75th percentile 295 (OK=295 KO=- ) \u0026gt; response time 95th percentile 565 (OK=565 KO=- ) \u0026gt; response time 99th percentile 619 (OK=620 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) Dotnet 9 rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 2 (OK=2 KO=- ) \u0026gt; max response time 834 (OK=834 KO=- ) \u0026gt; mean response time 314 (OK=314 KO=- ) \u0026gt; std deviation 167 (OK=167 KO=- ) \u0026gt; response time 50th percentile 289 (OK=289 KO=- ) \u0026gt; response time 75th percentile 376 (OK=376 KO=- ) \u0026gt; response time 95th percentile 663 (OK=663 KO=- ) \u0026gt; response time 99th percentile 744 (OK=744 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) graalvm native quarkus ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 5 (OK=5 KO=- ) \u0026gt; max response time 1252 (OK=1252 KO=- ) \u0026gt; mean response time 433 (OK=433 KO=- ) \u0026gt; std deviation 220 (OK=220 KO=- ) \u0026gt; response time 50th percentile 388 (OK=388 KO=- ) \u0026gt; response time 75th percentile 523 (OK=523 KO=- ) \u0026gt; response time 95th percentile 891 (OK=891 KO=- ) \u0026gt; response time 99th percentile 1006 (OK=1006 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) graalvm native micronaut ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 2 (OK=2 KO=- ) \u0026gt; max response time 880 (OK=880 KO=- ) \u0026gt; mean response time 262 (OK=262 KO=- ) \u0026gt; std deviation 141 (OK=141 KO=- ) \u0026gt; response time 50th percentile 235 (OK=235 KO=- ) \u0026gt; response time 75th percentile 322 (OK=322 KO=- ) \u0026gt; response time 95th percentile 547 (OK=547 KO=- ) \u0026gt; response time 99th percentile 656 (OK=656 KO=- ) \u0026gt; mean requests/sec 5333.333 (OK=5333.333 KO=- ) graalvm native spring-boot-web ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 1 (OK=1 KO=- ) \u0026gt; max response time 1935 (OK=1935 KO=- ) \u0026gt; mean response time 444 (OK=444 KO=- ) \u0026gt; std deviation 295 (OK=295 KO=- ) \u0026gt; response time 50th percentile 391 (OK=391 KO=- ) \u0026gt; response time 75th percentile 518 (OK=519 KO=- ) \u0026gt; response time 95th percentile 948 (OK=948 KO=- ) \u0026gt; response time 99th percentile 1622 (OK=1622 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) graalvm native spring-boot-webflux ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 1 (OK=1 KO=- ) \u0026gt; max response time 1366 (OK=1366 KO=- ) \u0026gt; mean response time 395 (OK=395 KO=- ) \u0026gt; std deviation 238 (OK=238 KO=- ) \u0026gt; response time 50th percentile 320 (OK=320 KO=- ) \u0026gt; response time 75th percentile 487 (OK=487 KO=- ) \u0026gt; response time 95th percentile 939 (OK=939 KO=- ) \u0026gt; response time 99th percentile 1184 (OK=1184 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) graalvm native vertx ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 42 (OK=42 KO=- ) \u0026gt; max response time 865 (OK=865 KO=- ) \u0026gt; mean response time 437 (OK=437 KO=- ) \u0026gt; std deviation 155 (OK=155 KO=- ) \u0026gt; response time 50th percentile 452 (OK=452 KO=- ) \u0026gt; response time 75th percentile 564 (OK=564 KO=- ) \u0026gt; response time 95th percentile 655 (OK=655 KO=- ) \u0026gt; response time 99th percentile 735 (OK=735 KO=- ) \u0026gt; mean requests/sec 4571.429 (OK=4571.429 KO=- ) graalvm native helidon ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=0 KO=32000 ) \u0026gt; min response time 0 (OK=- KO=0 ) \u0026gt; max response time 846 (OK=- KO=846 ) \u0026gt; mean response time 270 (OK=- KO=270 ) \u0026gt; std deviation 159 (OK=- KO=159 ) \u0026gt; response time 50th percentile 251 (OK=- KO=251 ) \u0026gt; response time 75th percentile 351 (OK=- KO=351 ) \u0026gt; response time 95th percentile 593 (OK=- KO=593 ) \u0026gt; response time 99th percentile 682 (OK=- KO=682 ) \u0026gt; mean requests/sec 5333.333 (OK=- KO=5333.333) graalvm native ktor rest service ---- Global Information -------------------------------------------------------- \u0026gt; request count 32000 (OK=32000 KO=0 ) \u0026gt; min response time 0 (OK=0 KO=- ) \u0026gt; max response time 5908 (OK=5908 KO=- ) \u0026gt; mean response time 497 (OK=497 KO=- ) \u0026gt; std deviation 779 (OK=779 KO=- ) \u0026gt; response time 50th percentile 162 (OK=162 KO=- ) \u0026gt; response time 75th percentile 516 (OK=516 KO=- ) \u0026gt; response time 95th percentile 2178 (OK=2178 KO=- ) \u0026gt; response time 99th percentile 3345 (OK=3345 KO=- ) \u0026gt; mean requests/sec 4000 (OK=4000 KO=- ) GraalVM Native Binaries Sizes: Size in MB Name 62 quarkus-demo-runner 80 micronaut-demo 85 springboot-demo-web 89 springboot-webflux-demo 62 vertx-demo 56 helidon-quickstart-se 63 ktor-demo source code for the java and dotnet tests :point_left: source code for the rust tests :point_left: github action :point_left:\n","permalink":"https://ozkanpakdil.github.io/test-microservice-frameworks/posts/2025/2025-08-23-microservice-framework-test-24/","summary":"\u003cp\u003eIn Linux pkrvmqc4gcfdwos 6.11.0-1018-azure #18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMemory Usage: 876/15995MB \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e5.48%\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eDisk Usage: 49/72GB \u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003e68%\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCPU Load: 2.14\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCPU core count:4\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCPUs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3241.199\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3241.547\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3245.587\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecpu MHz\t\t: 3243.334\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBelow is total package generation times for separate modules,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e eclipse-microprofile-kumuluz-test 4.1.0 ............ SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  5.411 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e helidon-quickstart-se 4.2.2 ........................ SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  6.979 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e ktor-demo 3.2.3-kotlin-2.2.0 ....................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e 11.932 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e micronaut-demo 4.9.2 ............................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e 26.649 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e quarkus-demo 3.25.0 ................................ SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e 14.504 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e springboot-webflux-demo 3.5.4 ...................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  2.604 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e springboot-demo-web 3.5.4 .......................... SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  2.602 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINFO\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e vertx-demo 4.5.16 .................................. SUCCESS \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e  5.323 s\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSize of created packages:\u003c/p\u003e","title":"Java microservice framework tests in SB:3.5.4 Q:3.25.0 M:4.9.2 V:4.5.16 H:4.2.2 Dotnet:7,8,9 openjdk version \"24.0.2\" 2025-07-15 rustc 1.89.0 (29483883e 2025-08-04)"}]